// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model user  {
  user_id       Int        @id @default(autoincrement())
  username      String     @db.VarChar(100)
  image         String?    @db.Text
  phone_number  String     @db.VarChar(12)
  birthday      DateTime   @map("birthday") @db.Date   
  email         String     @db.VarChar(255) @unique
  password      String     @db.VarChar(255)
  role          String     @db.VarChar @default("user")
  blog          blog[]
  comment       comment[]
  favorite      favorite[]
}
model restaurant  {
  res_id            Int        @id @default(autoincrement())
  name              String     @db.VarChar(255)
  image             String?    @db.Text
  image_background  String?    @db.Text
  phone_number      String     @db.VarChar(12)
  address           String     @db.Text
  description       String     @db.Text
  res_op            res_op[]
  blog              blog[]
  comment           comment[]
  favorite          favorite[]
  res_type          res_type[]
}
model res_type {
  res_id            Int
  category_id       Int
  restaurant        restaurant    @relation(fields: [res_id], references: [res_id])
  category          category      @relation(fields: [category_id],references: [category_id])
  @@unique([res_id,category_id])
}
model category {
  category_id       Int       @id @default(autoincrement())
  name              String    @db.Text
  res_type          res_type[]
}
model res_op  {
  res_id            Int
  open_id           Int
  restaurant        restaurant    @relation(fields: [res_id], references: [res_id])
  openingHours      openingHours  @relation(fields: [open_id], references: [open_id])
  @@unique([res_id,open_id])
}
model openingHours {
  open_id            Int        @id @default(autoincrement())
  day_of_week        String     @db.Text
  opening_time       String     @db.Text
  closing_time       String     @db.Text
  res_op             res_op[]
}
model blog {
  blog_id            Int           @id @default(autoincrement())
  user_id            Int
  res_id             Int
  title              String        @db.Text
  image              String?       @db.Text
  description        String        @db.Text
  posted_date        DateTime      @default(now())
  restaurant         restaurant    @relation(fields: [res_id], references: [res_id])
  user               user          @relation(fields: [user_id], references: [user_id])
}
model comment {
  comment_id         Int           @id @default(autoincrement())
  user_id            Int
  res_id             Int
  rating             Int           @default(0)
  description        String        @db.Text
  posted_date        DateTime      @default(now())
  restaurant         restaurant    @relation(fields: [res_id], references: [res_id])
  user               user          @relation(fields: [user_id], references: [user_id])
}
model favorite {
  user_id            Int
  res_id             Int
  restaurant         restaurant    @relation(fields: [res_id], references: [res_id])
  user               user          @relation(fields: [user_id], references: [user_id])
  @@unique([user_id,res_id])
}